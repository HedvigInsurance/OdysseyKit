// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name KMPNativeCoroutinesAsync
import KMPNativeCoroutinesCore
import Swift
import _Concurrency

#if compiler(>=5.3) && $AsyncAwait
public func asyncFunction<Result, Failure, Unit>(for nativeSuspend: @escaping KMPNativeCoroutinesCore.NativeSuspend<Result, Failure, Unit>) async throws -> Result where Failure : Swift.Error
#endif


#if compiler(>=5.3) && $AsyncAwait
public func asyncResult<Output, Failure, Unit>(for nativeSuspend: @escaping KMPNativeCoroutinesCore.NativeSuspend<Output, Failure, Unit>) async -> Swift.Result<Output, Swift.Error> where Failure : Swift.Error
#endif

public func asyncStream<Output, Failure, Unit>(for nativeFlow: @escaping KMPNativeCoroutinesCore.NativeFlow<Output, Failure, Unit>) -> _Concurrency.AsyncThrowingStream<Output, Swift.Error> where Failure : Swift.Error
